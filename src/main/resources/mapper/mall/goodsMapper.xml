<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace通常是dao的完整路径 -->
<mapper namespace="com.cjt.trade.dao.IGoodsDao">
	<sql id="getGoods">
		SELECT
			g.id 'id',
			t.id 'tradeId',
			t.name 'tradeName',
			b.id 'brandId',
			b.name 'brandName',
			p.id 'productId',
			p.name 'productName',
			g.`name` 'name',
			g.number 'number',
			g.price 'price',
			g.scroll scroll,
			g.hot hot,
			g.title 'title',
			g.keyword 'keyword',
			g.description 'description',
			g.logo_real_url 'logoRealUrl',
			g.logo_url 'logoUrl',
			g.content 'content',
			g.update_time 'updateTime'
		FROM
			goods g
		LEFT JOIN product p ON g.product_id = p.id
		LEFT JOIN brand b ON p.brand_id = b.id
		LEFT JOIN trade t ON b.trade_id = t.id
	</sql>

	<!-- 这里面的id一定是与dao中的方法名所对应的 -->
	<insert id="insertGoods" parameterType="com.cjt.trade.model.Goods">
		INSERT INTO goods (
			product_id,
			number,
			`name`,
			title,
			price,
			scroll,
			hot,
			keyword,
			description,
			logo_url,
			logo_real_url,
			content,
			update_time
		)
		VALUES
			(
				#{productId},
				#{number},
				#{name},
				#{title},
				#{price},
				#{scroll},
				#{hot},
				#{keyword},
				#{description},
				#{logoUrl},
				#{logoRealUrl},
				#{content},
				CURRENT_TIMESTAMP
			)
	</insert>
	
	<delete id="deleteGoods" parameterType="int">
		DELETE
		FROM
			goods
		WHERE
			id = #{id}
	</delete>
	
	<select id="getAllGoods" parameterType="com.cjt.trade.dto.BaseDto" resultType="com.cjt.trade.vo.GoodsVo">
		<include refid="getGoods" />
		LIMIT #{start}, #{limit}
	</select>
	
	<select id="getAllGoodsCount" parameterType="com.cjt.trade.dto.BaseDto" resultType="int">
		SELECT
			COUNT(*)
		FROM
			goods
	</select>
	
	<select id="getGoodsById" parameterType="int" resultType="com.cjt.trade.model.Goods">
		<include refid="getGoods"></include>
		WHERE
			g.id = #{id}
	</select>
	
	<update id="updateGoods" parameterType="com.cjt.trade.model.Goods">
		UPDATE goods
		SET 
			product_id = #{productId},
			`name` = #{name},
			number = #{number},
			title = #{title},
			price = #{price},
			scroll = #{scroll},
			hot = #{hot},
			keyword = #{keyword},
			description = #{description},
		 	<if test="logoUrl != null and logoRealUrl != null">
				logo_url = #{logoUrl},
				logo_real_url = #{logoRealUrl},
			</if>
			content = #{content},
			update_time = CURRENT_TIMESTAMP
		WHERE
			id = #{id}
	</update>
	
	<select id="getScrollGoods" resultType="com.cjt.trade.model.Goods">
		<include refid="getGoods"></include>
		WHERE
			g.scroll = 1
	</select>
	
	<select id="getHotGoods" resultType="com.cjt.trade.model.Goods">
		<include refid="getGoods"></include>
		WHERE
			g.hot = 1
	</select>
	
	<select id="getNewGoods" parameterType="com.cjt.trade.dto.GoodsDto" resultType="com.cjt.trade.model.Goods">
		<include refid="getGoods"></include>
		WHERE
		<choose>
	        <when test="type ==1">
	            t.id = ${id}
	        </when>
	        <when test="type ==2">
	            b.id = ${id}
	        </when>
	        <when test="type ==3">
	            p.id = ${id}
	        </when>
	        <otherwise>
	            1 = 1
	        </otherwise>
	    </choose>
	    ORDER BY g.update_time DESC
		LIMIT #{start}, #{limit}
	</select>
	
	<select id="getNewGoodsCount" resultType="int">
		SELECT COUNT(*)
		FROM
			goods g
		LEFT JOIN product p ON g.product_id = p.id
		LEFT JOIN brand b ON p.brand_id = b.id
		LEFT JOIN trade t ON b.trade_id = t.id
		WHERE
		<choose>
	        <when test="type ==1">
	            t.id = ${id}
	        </when>
	        <when test="type ==2">
	            b.id = ${id}
	        </when>
	        <when test="type ==3">
	            p.id = ${id}
	        </when>
	        <otherwise>
	            1 = 1
	        </otherwise>
	    </choose>
	</select>
</mapper>